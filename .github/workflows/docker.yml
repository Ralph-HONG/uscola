name: Docker Build & Push

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BACKEND: ${{ github.repository }}/backend
  IMAGE_NAME_FRONTEND: ${{ github.repository }}/frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: false  # 임시로 비활성화
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service: [backend, frontend]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ matrix.service == 'backend' && env.IMAGE_NAME_BACKEND || env.IMAGE_NAME_FRONTEND }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      timeout-minutes: 20
      with:
        context: ./${{ matrix.service }}
        file: ./${{ matrix.service }}/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64
        build-args: |
          VITE_API_URL=${{ matrix.service == 'frontend' && secrets.PRODUCTION_API_URL || '' }}
        provenance: false

  # Integration test with Docker Compose
  integration-test:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: false  # 임시로 비활성화

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Start services
      run: docker-compose up -d

    - name: Wait for services
      run: |
        timeout 60s bash -c 'until curl -f http://localhost:3000/health; do sleep 2; done'
        timeout 60s bash -c 'until curl -f http://localhost:80; do sleep 2; done'

    - name: Run integration tests
      run: |
        # API 테스트
        curl -f http://localhost:3000/api/test
        curl -f http://localhost:3000/api/users
        
        # Frontend 테스트
        curl -f http://localhost:80
        
    - name: Stop services
      run: docker-compose down