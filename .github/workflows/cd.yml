name: CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
    branches: [ main ]

jobs:
  # Deploy Frontend to Vercel
  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    permissions:
      contents: read
      deployments: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci
        
    - name: Build frontend
      run: cd frontend && npm run build
      env:
        VITE_API_URL: ${{ secrets.PRODUCTION_API_URL || 'https://your-backend-url.com' }}
        
    - name: Deploy to Vercel
      uses: BetaHuhn/deploy-to-vercel-action@v1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        WORKING_DIRECTORY: ./frontend
        
  # Deploy Backend (예: Railway, Render, AWS)
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        cd backend && npm ci
        
    - name: Build backend
      run: cd backend && npm run build
      
    - name: Deploy to Railway (예시)
      run: |
        # Railway CLI를 사용한 배포 예시
        # npx @railway/cli deploy
        echo "Backend deployment configured for your hosting service"
        
    # 또는 Docker 이미지 빌드 및 푸시
    - name: Build and push Docker image
      run: |
        echo "Docker deployment will be configured next"